package main;

public class MinBinHeap implements HeapInterface {

	  // in here go all your data and methods for the heap

	int size, current, end;
	EntryPair root;
	EntryPair[] heap;
	
	  public MinBinHeap ( ) { // default constructor
	    // explicitly include this
	    // we need to have the default constructor
	    // if you then write others, this one will still be there
		  size = 0;
		  end = 1;
		  heap = new EntryPair[1000];
	  }
	  
	public MinBinHeap(EntryPair e){
		root = e;
		size = 1;
		end = 1;
		heap = new EntryPair[100];
	}

	@Override
	public void insert(EntryPair entry) {
		if(size == 0){
			heap[end] = entry;
			size++;
			end++;
		}
		else
		{
			heap[end] = entry;
			size++;
			end++;
		}
		while(entry.getPriority() < heap[end/2].getPriority() && (end/2 > 0)){
			heap[end] = heap[end/2];
			heap[end/2] = entry;
			if(heap[1] == entry){
				root = entry;
			}
		}
		
	}

	@Override
	public void delMin() {
		heap[1] = null;
	}

	@Override
	public EntryPair getMin() {
		return root;
	}

	@Override
	public int size() {
		return size;
	}

	@Override
	public void build(EntryPair[] entries) {
		for(int i = 0; i < entries.length; i++){
			insert(entries[i]);
		}
	}
	
	public void print(){
		for(int i = 0; i < 50; i++){
			System.out.println(heap[i]);
		}
	}
	}